<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
				 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

              <!-- package..class로 가정하고 사용 -->				 
<mapper namespace="com.demoweb.mapper.BoardMapper">

	<select id="selectAll" resultType="Board">
		SELECT boardno, title, writer, readcount, regdate, deleted
		FROM board
		ORDER BY boardno DESC
	</select>
	
	<select id="selectByRange" parameterType="hashmap" resultType="Board">
		SELECT boardno, title, writer, readcount, regdate, deleted
		FROM board
		ORDER BY boardno DESC
		LIMIT #{from}, #{count}
	</select>
	
	<select id="selectBoardCount" resultType="int">
		SELECT COUNT(*) FROM board
	</select>
	
	<!-- 
	<insert id="insertBoard" parameterType="Board"
			useGeneratedKeys="true" keyColumn="boardno" keyProperty="boardNo">
		INSERT INTO board (title, writer, content) 
		VALUES (#{title}, #{writer}, #{content})
	</insert>
	-->	
	<insert id="insertBoard" parameterType="Board">
		<selectKey keyProperty="boardNo" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO board (title, writer, content) 
		VALUES (#{title}, #{writer}, #{content})
	</insert>
	<insert id="insertBoardAttach" parameterType="BoardAttach">
		INSERT boardattach (boardno, userfilename, savedfilename)
		VALUES (#{boardNo}, #{userFileName}, #{savedFileName})
	</insert>
	
	<!-- 두 개의 테이블에서 데이터 조회하는 방법 1 -->
	<select id="selectByBoardNo" parameterType="int" resultType="Board">
		SELECT boardno, title, writer, content, readcount, regdate
		FROM board
		WHERE boardno = #{boardNo} AND deleted = FALSE
	</select>	
	<select id="selectBoardAttachByBoardNo" parameterType="int"
											resultType="BoardAttach">
		SELECT attachno, boardno, userfilename, savedfilename, downloadcount
		FROM boardattach
		WHERE boardno = #{boardNo}
	</select>
	
	<!-- 두 개의 테이블에서 데이터 조회하는 방법 2 : 중첩 select 방식 -->
	<resultMap type="Board" id="boardResultMap">
		<id column="boardno" property="boardNo" />
		<result column="title" property="title" />
		<result column="writer" property="writer" />
		<result column="content" property="content" />
		<result column="readcount" property="readCount" />
		<result column="regdate" property="regDate" />
		<collection property="files" 
					select="selectBoardAttachByBoardNo2" 
					column="boardno" />
	</resultMap>
	<select id="selectByBoardNo2" parameterType="int" resultMap="boardResultMap">
		SELECT boardno, title, writer, content, readcount, regdate
		FROM board
		WHERE boardno = #{boardNo} AND deleted = FALSE
	</select>	
	<select id="selectBoardAttachByBoardNo2" parameterType="int"
											resultType="BoardAttach">
		SELECT attachno, boardno, userfilename, savedfilename, downloadcount
		FROM boardattach
		WHERE boardno = #{boardNo}
	</select>
	
	<!-- 두 개의 테이블에서 데이터 조회하는 방법 3 : 중첩 result 방식 -->
	<resultMap type="Board" id="boardResultMap3">
		<id column="boardno" property="boardNo" />
		<result column="title" property="title" />
		<result column="writer" property="writer" />
		<result column="content" property="content" />
		<result column="readcount" property="readCount" />
		<result column="regdate" property="regDate" />
		<collection property="files" 
					select="selectBoardAttachByBoardNo2" 
					column="boardno" />
	</resultMap>
	<select id="selectByBoardNo3" parameterType="int" resultMap="boardResultMap3">
		SELECT boardno, title, writer, content, readcount, regdate
		FROM board
		WHERE boardno = #{boardNo} AND deleted = FALSE
	</select>
	<resultMap type="BoardAttach" id="boardAttachResultMap3">
		<id column="attachno" property="attachNo" />
		<result column="boardno" property="boardNo" />
		<result column="userfilename" property="userFileName" />
		<result column="savedfilename" property="savedFileName" />
		<result column="downloadcount" property="downloadCount" />
	</resultMap>
	<select id="selectBoardAttachByBoardNo3" parameterType="int"
											resultType="BoardAttach">
		SELECT attachno, boardno, userfilename, savedfilename, downloadcount
		FROM boardattach
		WHERE boardno = #{boardNo}
	</select>
	
	
	<update id="updateBoardReadCount" parameterType="int">
		UPDATE board 
		SET readcount = readcount + 1 
		WHERE boardno = #{boardNo}
	</update>
	
	<select id="selectBoardAttachByAttachNo" parameterType="int" 
											 resultType="BoardAttach">
		SELECT attachno, boardno, userfilename, savedfilename, downloadcount
		FROM boardattach
		WHERE attachno = #{attachNo}
	</select>
	
	<delete id="delete" parameterType="int">
		UPDATE board 
		SET deleted = TRUE 
		WHERE boardno = #{boardNo}
	</delete>
	
	<update id="update" parameterType="Board">
		UPDATE board
		SET title = #{title}, content = #{content}
		WHERE boardno = #{boardNo}
	</update>
	
	
	
	
	
	
	
	

</mapper>