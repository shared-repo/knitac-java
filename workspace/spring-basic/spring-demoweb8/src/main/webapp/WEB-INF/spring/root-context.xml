<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="accountService" class="com.demoweb.service.AccountServiceImpl">
		<property name="memberDao" ref="memberDaoWithMyBatis" />
		<property name="memberMapper" ref="memberMapper" />
	</bean>	
	<bean id="memberDaoWithMyBatis" class="com.demoweb.dao.MemberDaoWithMyBatis">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</bean>
	<!-- Spring-Mybatis가 자동으로 만들어주는 DAO -->
	<!-- 
	<bean id="memberMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
		<property name="mapperInterface" value="com.demoweb.mapper.MemberMapper" />
	</bean>
	-->
	
	<bean id="boardService" class="com.demoweb.service.BoardServiceImpl">
		<property name="boardDao" ref="boardDaoWithMyBatis" />
		<property name="boardMapper" ref="boardMapper" />
	</bean>
	<bean id="boardDaoWithMyBatis" class="com.demoweb.dao.BoardDaoWithMyBatis">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</bean>
	<!-- Spring-Mybatis가 자동으로 만들어주는 DAO -->
	<!-- 
	<bean id="boardMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
		<property name="mapperInterface" value="com.demoweb.mapper.BoardMapper" />
	</bean>
	-->
	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/demoweb" />
		<property name="username" value="knit" />
		<property name="password" value="mysql" />
		<property name="maxTotal" value="20" />
		<property name="maxIdle" value="10" />
		<property name="maxWaitMillis" value="-1" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 
	1. SqlSessionFactoryBean 객체를 만드는 것이 아닙니다.
	2. SqlSessionFactoryBean 객체의 getObject()호출이 반환하는 객체 등록 
	   ( 여기서는 SqlSessionFactory ) 
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<mybatis:scan base-package="com.demoweb.mapper" />
	
	<bean id="demoAdvice" class="com.demoweb.advice.DemoAdvice" />
	<aop:config>
		<aop:aspect ref="demoAdvice">		
			<aop:pointcut id="servicePointcut"
						  expression="within(*..*ServiceImpl)" />
			<aop:pointcut id="mapperPointcut"
						  expression="bean(member*)" />
 			
			<aop:around method="doAround" pointcut-ref="servicePointcut" />
 			<aop:after-returning method="doAfterReturning" pointcut-ref="mapperPointcut" />
		
		</aop:aspect>
	</aop:config>
	
	
	
</beans>








